{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5001/api/admin';\n  }\n  getHeaders() {\n    return new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('admin_token')}`,\n      'Content-Type': 'application/json'\n    });\n  }\n  // Orders\n  getAllOrders() {\n    return this.http.get(`${this.apiUrl}/orders`, {\n      headers: this.getHeaders()\n    });\n  }\n  updateOrderStatus(orderId, status) {\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/status`, {\n      status\n    }, {\n      headers: this.getHeaders()\n    });\n  }\n  // Dashboard\n  getDashboardStats() {\n    return this.http.get(`${this.apiUrl}/dashboard/stats`, {\n      headers: this.getHeaders()\n    });\n  }\n  // Foods management\n  getAllFoods() {\n    return this.http.get(`${this.apiUrl}/foods`, {\n      headers: this.getHeaders()\n    });\n  }\n  addFood(food) {\n    return this.http.post(`${this.apiUrl}/foods`, food, {\n      headers: this.getHeaders()\n    });\n  }\n  updateFood(id, food) {\n    return this.http.put(`${this.apiUrl}/foods/${id}`, food, {\n      headers: this.getHeaders()\n    });\n  }\n  deleteFood(id) {\n    return this.http.delete(`${this.apiUrl}/foods/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  // Customers\n  getCustomers() {\n    return this.http.get(`${this.apiUrl}/customers`, {\n      headers: this.getHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","AdminService","constructor","http","apiUrl","getHeaders","localStorage","getItem","getAllOrders","get","headers","updateOrderStatus","orderId","status","put","getDashboardStats","getAllFoods","addFood","food","post","updateFood","id","deleteFood","delete","getCustomers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\akkin\\OneDrive\\Desktop\\thecooknextdoor\\frontend\\src\\app\\services\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface Food {\r\n  _id?: string;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  imageUrl: string;\r\n  distance: number;\r\n  preorder: boolean;\r\n}\r\n\r\ninterface Order {\r\n  _id: string;\r\n  foodId: Food;\r\n  buyerName: string;\r\n  address: string;\r\n  deliveryOption: string;\r\n  paymentStatus: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface DashboardStats {\r\n  totalOrders: number;\r\n  totalFoods: number;\r\n  pendingOrders: number;\r\n  completedOrders: number;\r\n  totalRevenue: number;\r\n}\r\n\r\ninterface CustomerData {\r\n  name: string;\r\n  totalOrders: number;\r\n  totalSpent: number;\r\n  lastOrder: string;\r\n  orders: Order[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  private apiUrl = 'http://localhost:5001/api/admin';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getHeaders() {\r\n    return new HttpHeaders({\r\n      'Authorization': `Bearer ${localStorage.getItem('admin_token')}`,\r\n      'Content-Type': 'application/json'\r\n    });\r\n  }\r\n\r\n  // Orders\r\n  getAllOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(`${this.apiUrl}/orders`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  updateOrderStatus(orderId: string, status: string): Observable<Order> {\r\n    return this.http.put<Order>(`${this.apiUrl}/orders/${orderId}/status`, { status }, { headers: this.getHeaders() });\r\n  }\r\n\r\n  // Dashboard\r\n  getDashboardStats(): Observable<DashboardStats> {\r\n    return this.http.get<DashboardStats>(`${this.apiUrl}/dashboard/stats`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  // Foods management\r\n  getAllFoods(): Observable<Food[]> {\r\n    return this.http.get<Food[]>(`${this.apiUrl}/foods`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  addFood(food: Food): Observable<Food> {\r\n    return this.http.post<Food>(`${this.apiUrl}/foods`, food, { headers: this.getHeaders() });\r\n  }\r\n\r\n  updateFood(id: string, food: Food): Observable<Food> {\r\n    return this.http.put<Food>(`${this.apiUrl}/foods/${id}`, food, { headers: this.getHeaders() });\r\n  }\r\n\r\n  deleteFood(id: string): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(`${this.apiUrl}/foods/${id}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  // Customers\r\n  getCustomers(): Observable<CustomerData[]> {\r\n    return this.http.get<CustomerData[]>(`${this.apiUrl}/customers`, { headers: this.getHeaders() });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AA0C9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAE/BC,UAAUA,CAAA;IAChB,OAAO,IAAIL,WAAW,CAAC;MACrB,eAAe,EAAE,UAAUM,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;MAChE,cAAc,EAAE;KACjB,CAAC;EACJ;EAEA;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,MAAM,SAAS,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EACxF;EAEAM,iBAAiBA,CAACC,OAAe,EAAEC,MAAc;IAC/C,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,WAAWQ,OAAO,SAAS,EAAE;MAAEC;IAAM,CAAE,EAAE;MAAEH,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EACpH;EAEA;EACAU,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACL,MAAM,kBAAkB,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EACxG;EAEA;EACAW,WAAWA,CAAA;IACT,OAAO,IAAI,CAACb,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EACtF;EAEAY,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAO,GAAG,IAAI,CAACf,MAAM,QAAQ,EAAEc,IAAI,EAAE;MAAER,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EAC3F;EAEAe,UAAUA,CAACC,EAAU,EAAEH,IAAU;IAC/B,OAAO,IAAI,CAACf,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,UAAUiB,EAAE,EAAE,EAAEH,IAAI,EAAE;MAAER,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EAChG;EAEAiB,UAAUA,CAACD,EAAU;IACnB,OAAO,IAAI,CAAClB,IAAI,CAACoB,MAAM,CAAsB,GAAG,IAAI,CAACnB,MAAM,UAAUiB,EAAE,EAAE,EAAE;MAAEX,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EAC5G;EAEA;EACAmB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACrB,IAAI,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACL,MAAM,YAAY,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACL,UAAU;IAAE,CAAE,CAAC;EAClG;;;uBA9CWJ,YAAY,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZ3B,YAAY;MAAA4B,OAAA,EAAZ5B,YAAY,CAAA6B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}