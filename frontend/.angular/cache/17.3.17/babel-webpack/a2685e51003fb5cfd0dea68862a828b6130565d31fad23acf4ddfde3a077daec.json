{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { PaymentComponent } from './components/payment/payment.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: 'order',\n  pathMatch: 'full'\n}, {\n  path: 'order',\n  component: OrderListComponent\n}, {\n  path: 'address',\n  component: AddressComponent\n}, {\n  path: 'payment',\n  component: PaymentComponent\n}, {\n  path: 'admin/login',\n  loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule)\n}, {\n  path: 'admin',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule)\n}, {\n  path: '**',\n  redirectTo: 'order'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","OrderListComponent","AddressComponent","PaymentComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","loadChildren","then","m","AdminModule","canActivate","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\Users\\akkin\\OneDrive\\Desktop\\thecooknextdoor\\frontend\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrderListComponent } from './components/order-list/order-list.component';\r\nimport { AddressComponent } from './components/address/address.component';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'order', pathMatch: 'full' },\r\n  { path: 'order', component: OrderListComponent },\r\n  { path: 'address', component: AddressComponent },\r\n  { path: 'payment', component: PaymentComponent },\r\n  {\r\n    path: 'admin/login',\r\n    loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule)\r\n  },\r\n  {\r\n    path: 'admin',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule)\r\n  },\r\n  { path: '**', redirectTo: 'order' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,8CAA8C;AACjF,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,SAAS,QAAQ,qBAAqB;;;AAE/C,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAER;AAAkB,CAAE,EAChD;EAAEK,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAEP;AAAgB,CAAE,EAChD;EAAEI,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAEN;AAAgB,CAAE,EAChD;EACEG,IAAI,EAAE,aAAa;EACnBI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW;CACtF,EACD;EACEP,IAAI,EAAE,OAAO;EACbQ,WAAW,EAAE,CAACV,SAAS,CAAC;EACxBM,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW;CACtF,EACD;EAAEP,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAO,CAAE,CACpC;AAMD,OAAM,MAAOQ,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBf,YAAY,CAACgB,OAAO,CAACX,MAAM,CAAC,EAC5BL,YAAY;IAAA;EAAA;;;2EAEXe,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}